# remap prefix from 'C-b' to 'C-a'
# unbind C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix

#bind v to copy mode
#bind -T copy-mode-vi v send -X begin-selection
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
#bind P paste-buffer
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# force a reload of the config file
# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize pane
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5
bind -n C-Right resize-pane -R 10
bind -n C-Left resize-pane -L 10

bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n S-Right resize-pane -R 2
bind -n S-Left resize-pane -L 2
# tmux status bar color
set-option -g status-keys "emacs"
set -g status-left-length 50
set -g status-right "#(date '+%a, %b %d - %I:%M') "


bind c new-window -c "#{pane_current_path}"
set -g base-index 1
set -g renumber-windows on

bind-key b break-pane -d
bind-key C-j choose-tree

set -g mouse on
## Update default binding of `Enter` to also use copy-pipe
#unbind -T vi-copy Enter
#bind-key -T vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -T vi-copy v begin-selection
#bind -T copy-mode-vi M-y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"
#bind-key -T vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

#set -g @yank_action 'copy-pipe-no-clear'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
